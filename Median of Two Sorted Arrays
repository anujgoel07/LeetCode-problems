/*PROGRAM :Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

 

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:

Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.
Example 3:

Input: nums1 = [0,0], nums2 = [0,0]
Output: 0.00000
Example 4:

Input: nums1 = [], nums2 = [1]
Output: 1.00000
Example 5:

Input: nums1 = [2], nums2 = []
Output: 2.00000*/


SOLUTION :

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int len=nums1.length+nums2.length;
        int[] mergeArray=new int[len];
        int x=0;
        int y=0;
        while(x<nums1.length)
        {
            
            mergeArray[x]=nums1[x];
            x++;
        }
        while(x<len)
        {
            mergeArray[x]=nums2[y];
            y++;
            x++;
        }
        Arrays.sort(mergeArray);
        if (len%2!=0)
            return (double) mergeArray[len / 2];
        else
            return (double)(mergeArray[(len/2)-1] + mergeArray[len/2])/2;
    }
}
